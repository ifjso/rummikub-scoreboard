{"version":3,"sources":["components/menu/TopMenu.js","components/commons/Responsive.js","components/commons/Button.js","lib/api/client.js","lib/api/users.js","components/scoreboard/Score.js","components/scoreboard/ScoreBoard.js","containers/ScoreBoardContainer.js","pages/ScoreBoardPage.js","lib/api/histories.js","components/history/HistoryItem.js","components/history/HistoryList.js","containers/HistoryListContainer.js","pages/HistoryPage.js","App.js","serviceWorker.js","index.js"],"names":["withRouter","pathname","location","useState","active","setActive","onItemClick","useCallback","e","to","Menu","fixed","size","icon","borderless","inverted","Item","as","Link","onClick","src","alt","style","fontSize","Icon","name","ResponsiveBlock","styled","div","Responsive","children","rest","buttonStyle","css","StyledLink","StyledButton","button","Button","client","axios","create","defaults","baseURL","process","readUser","owner","get","updateUser","score","emojiType","memo","patch","ScoreBlock","Wrapper","ProfileBlock","reversed","Picture","Nickname","span","Profile","user","picture","Score","setUser","isCancelled","useRef","useEffect","a","data","current","readUserFunc","value","randomInt","color","ScoreBoardBlock","StyledSpan","ScoreBoard","ScoreBoardContainer","ScoreBoardPage","listHistories","page","perPage","queryString","qs","stringify","formatter","buildFormatter","koreaStrings","emojis","HistoryBox","TopHistoryBlock","BottomHistoryBlock","Content","bold","EmojiContent","ContentBlock","React","history","role","aria-label","date","createdAt","HistoryBlock","InfiniteScrollBlock","InfiniteScroll","histories","hasNextPage","pagination","setPagination","loadFunc","concat","pageStart","loadMore","hasMore","loader","Loader","key","inline","map","_id","HistoryListContainer","HistoryPage","App","component","path","exact","Boolean","window","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5ce05116.chunk.js","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Menu, Icon } from 'semantic-ui-react';\n\nconst TopMenu = ({ location: { pathname } }) => {\n  const [active, setActive] = useState(pathname);\n  const onItemClick = useCallback((e, { to }) => setActive(to), []);\n\n  return (\n    <Menu fixed=\"top\" size=\"massive\" icon borderless inverted>\n      <Menu.Item as={Link} to=\"/\" active={active === '/'} onClick={onItemClick}>\n        <img src=\"logo192.png\" alt=\"홈\" style={{ fontSize: '0.8rem' }} />\n      </Menu.Item>\n      <Menu.Item\n        as={Link}\n        to=\"/histories\"\n        active={active === '/histories'}\n        onClick={onItemClick}\n      >\n        <Icon name=\"history\" />\n      </Menu.Item>\n    </Menu>\n  );\n};\n\nexport default withRouter(TopMenu);\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst ResponsiveBlock = styled.div`\n  padding-left: 1rem;\n  padding-right: 1rem;\n  width: 80vw;\n  margin: 0 auto;\n  display: flex;\n`;\n\nconst Responsive = ({ children, ...rest }) => (\n  <ResponsiveBlock {...rest}>{children}</ResponsiveBlock>\n);\n\nexport default Responsive;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst buttonStyle = css`\n  width: 50%;\n  border: none;\n  outline: none;\n  font-size: 10vw;\n  padding: 1.5vw;\n  line-height: 7vw;\n  background: #121212;\n  cursor: pointer;\n`;\n\nconst StyledLink = styled(Link)`\n  ${buttonStyle}\n`;\n\nconst StyledButton = styled.button`\n  ${buttonStyle}\n`;\n\nconst Button = ({ to, ...rest }) =>\n  to ? <StyledLink to={to} {...rest} /> : <StyledButton {...rest} />;\n\nexport default Button;\n","import axios from 'axios';\n\nconst client = axios.create();\n\nclient.defaults.baseURL = process.env.REACT_APP_API_URL;\n\nexport default client;\n","import client from './client';\n\nexport const readUser = owner => client.get(`/api/users/${owner}`);\n\nexport const updateUser = ({ owner, score, emojiType, memo }) =>\n  client.patch(`/api/users/${owner}`, { score, emojiType, memo });\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport styled, { css } from 'styled-components';\nimport { Icon } from 'semantic-ui-react';\nimport randomInt from 'random-int';\nimport Button from '../commons/Button';\nimport { readUser, updateUser } from '../../lib/api/users';\n\nconst ScoreBlock = styled.div`\n  width: 26vw;\n  height: 100%;\n  display: flex;\n  color: white;\n  flex-direction: column;\n  align-content: space-between;\n  justify-content: center;\n  flex-flow: row wrap;\n\n  h1 {\n    margin: 0;\n    text-align: center;\n    font-size: 28vw;\n    line-height: 24vw;\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-flow: wrap;\n  padding-bottom: 5vh;\n`;\n\nconst ProfileBlock = styled.div`\n  width: 100%;\n  display: flex;\n\n  ${({ reversed }) =>\n    reversed &&\n    css`\n      flex-direction: row-reverse;\n    `}\n`;\n\nconst Picture = styled.div`\n  width: 28%;\n`;\n\nconst Nickname = styled.span`\n  margin: 0 auto;\n  padding: 1vw;\n  font-size: 6vw;\n  line-height: 2em;\n`;\n\nconst Profile = ({ reversed, user: { name, picture } }) => (\n  <ProfileBlock reversed={reversed}>\n    <Picture reversed={reversed} picture={picture} />\n    <Nickname>{name}</Nickname>\n  </ProfileBlock>\n);\n\nconst Score = ({ reversed = false, owner }) => {\n  const [user, setUser] = useState({});\n  const isCancelled = useRef(false);\n\n  useEffect(() => {\n    const readUserFunc = async () => {\n      const { data } = await readUser(owner);\n      if (!isCancelled.current) {\n        setUser(data);\n      }\n    };\n\n    readUserFunc();\n\n    return () => {\n      isCancelled.current = true;\n    };\n  }, [owner]);\n\n  const onClick = useCallback(\n    async value => {\n      const { data } = await updateUser({\n        owner,\n        score: user.score + value,\n        emojiType: value > 0 ? randomInt(4) : randomInt(5, 9)\n      });\n\n      if (!isCancelled.current) {\n        setUser(data);\n      }\n    },\n    [owner, user]\n  );\n\n  return (\n    <ScoreBlock>\n      <Button onClick={() => onClick(1)}>\n        <Icon name=\"plus\" size=\"small\" color=\"grey\" />\n      </Button>\n      <Wrapper>\n        <Profile reversed={reversed} user={user} />\n        <h1>{user.score}</h1>\n      </Wrapper>\n      <Button onClick={() => onClick(-1)}>\n        <Icon name=\"minus\" size=\"small\" color=\"grey\" />\n      </Button>\n    </ScoreBlock>\n  );\n};\n\nexport default Score;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Responsive from '../commons/Responsive';\nimport Score from './Score';\n\nconst ScoreBoardBlock = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n\nconst Wrapper = styled(Responsive)`\n  width: 86vw;\n  height: 90vw;\n  padding: 2vw;\n  align-items: center;\n  justify-content: space-between;\n  > span {\n    margin: 0;\n    font-size: 12vw;\n  }\n`;\n\nconst StyledSpan = styled.span`\n  padding-top: 3vw;\n  font-weight: bold;\n  color: white;\n`;\n\nconst ScoreBoard = () => (\n  <ScoreBoardBlock>\n    <Wrapper>\n      <Score reversed={false} owner={1} />\n      <StyledSpan>:</StyledSpan>\n      <Score reversed owner={2} />\n    </Wrapper>\n  </ScoreBoardBlock>\n);\n\nexport default ScoreBoard;\n","import React from 'react';\nimport ScoreBoard from '../components/scoreboard/ScoreBoard';\n\nconst ScoreBoardContainer = () => <ScoreBoard />;\n\nexport default ScoreBoardContainer;\n","import React from 'react';\nimport ScoreBoardContainer from '../containers/ScoreBoardContainer';\n\nconst ScoreBoardPage = () => <ScoreBoardContainer />;\n\nexport default ScoreBoardPage;\n","import qs from 'qs';\nimport client from './client';\n\nexport const listHistories = ({ page, perPage }) => {\n  const queryString = qs.stringify({ page, perPage });\n  return client.get(`/api/histories?${queryString}`);\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport TimeAgo from 'react-timeago';\nimport koreaStrings from 'react-timeago/lib/language-strings/ko';\nimport buildFormatter from 'react-timeago/lib/formatters/buildFormatter';\n\nconst formatter = buildFormatter(koreaStrings);\n\nconst emojis = ['🌝', '🎉', '🎈', '🍡', '🌟', '🌪', '😧', '⛈', '👻', '💩'];\nconst getEmoji = value => emojis[value];\n\nconst HistoryBox = styled.div`\n  margin-bottom: 2vh;\n  font-size: 1.1em;\n`;\n\nconst TopHistoryBlock = styled.div`\n  color: grey;\n`;\n\nconst BottomHistoryBlock = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Content = styled.span`\n  flex: 1;\n  line-height: 1.5em;\n  font-size: ${({ size = 1 }) => `${size}em`};\n  font-weight: ${({ bold }) => (bold ? 'bold' : 'normal')};\n  color: ${({ color }) => (color ? ` ${color}` : '')};\n`;\n\nconst EmojiContent = styled(Content)`\n  display: flex;\n  justify-content: center;\n  flex: 1;\n`;\n\nconst ContentBlock = styled.div`\n  display: flex;\n  align-items: flex-end;\n  flex: 3;\n  flex-flow: column;\n  color: grey;\n`;\n\nconst HistoryItem = ({ history }) => (\n  <HistoryBox value={history.value}>\n    <TopHistoryBlock>\n      <Content size=\"1.3\" bold>\n        {history.name}\n      </Content>\n    </TopHistoryBlock>\n\n    <BottomHistoryBlock>\n      <Content\n        size=\"3.5\"\n        bold\n        color={history.value > 0 ? '#5aff5d' : '#ff3834'}\n      >\n        {history.value > 0 ? `+${history.value}` : history.value}\n      </Content>\n\n      <EmojiContent role=\"img\" aria-label=\"\" size=\"2.8\">\n        {getEmoji(history.emojiType)}\n      </EmojiContent>\n\n      <ContentBlock>\n        <Content size=\"0.85\" bold>\n          {history.memo}\n        </Content>\n        <Content size=\"0.85\">\n          <TimeAgo date={history.createdAt} formatter={formatter} />\n        </Content>\n      </ContentBlock>\n    </BottomHistoryBlock>\n  </HistoryBox>\n);\n\nexport default React.memo(HistoryItem);\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { Loader } from 'semantic-ui-react';\nimport Responsive from '../commons/Responsive';\nimport { listHistories } from '../../lib/api/histories';\nimport HistoryItem from './HistoryItem';\n\nconst HistoryBlock = styled(Responsive)`\n  width: 100vw;\n  padding: 5rem 2rem;\n`;\n\nconst InfiniteScrollBlock = styled(InfiniteScroll)`\n  width: 100vw;\n`;\n\nconst HistoryList = () => {\n  const [pagination, setPagination] = useState({\n    histories: [],\n    hasNextPage: true\n  });\n  const { histories, hasNextPage } = pagination;\n  const isCancelled = useRef(false);\n\n  useEffect(\n    () => () => {\n      isCancelled.current = true;\n    },\n    []\n  );\n\n  const loadFunc = async page => {\n    const { data } = await listHistories({ page });\n    if (!isCancelled.current) {\n      setPagination({\n        histories: pagination.histories.concat(data.histories),\n        hasNextPage: data.hasNextPage\n      });\n    }\n  };\n  return (\n    <HistoryBlock>\n      <InfiniteScrollBlock\n        pageStart={0}\n        loadMore={loadFunc}\n        hasMore={hasNextPage}\n        loader={<Loader key=\"1\" active inline=\"centered\" size=\"small\" />}\n      >\n        {histories.map(history => (\n          <HistoryItem key={history._id} history={history} />\n        ))}\n      </InfiniteScrollBlock>\n    </HistoryBlock>\n  );\n};\n\nexport default React.memo(HistoryList);\n","import React from 'react';\nimport HistoryList from '../components/history/HistoryList';\n\nconst HistoryListContainer = () => <HistoryList />;\n\nexport default HistoryListContainer;\n","import React from 'react';\nimport HistoryListContainer from '../containers/HistoryListContainer';\n\nconst HistoryPage = () => <HistoryListContainer />;\n\nexport default HistoryPage;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport TopMenu from './components/menu/TopMenu';\nimport ScoreBoardPage from './pages/ScoreBoardPage';\nimport HistoryPage from './pages/HistoryPage';\nimport './App.css';\n\nconst App = () => (\n  <>\n    <TopMenu />\n    <Route component={ScoreBoardPage} path=\"/\" exact />\n    <Route component={HistoryPage} path=\"/histories\" />\n  </>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter basename=\"/rummikub-scoreboard\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}