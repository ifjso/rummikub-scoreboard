{"version":3,"sources":["components/memu/TopMenu.js","components/commons/Responsive.js","components/commons/Button.js","lib/api/client.js","lib/api/scores.js","components/scoreboard/Score.js","components/scoreboard/ScoreBoard.js","containers/ScoreBoardContainer.js","pages/ScoreBoardPage.js","lib/api/histories.js","components/history/History.js","containers/HistoryContainer.js","pages/HistoryPage.js","App.js","serviceWorker.js","index.js"],"names":["StyledMenu","styled","Menu","TopMenu","borderless","fixed","Container","text","Item","as","Link","to","name","ResponsiveBlock","div","Responsive","children","rest","buttonStyle","css","StyledLink","StyledButton","button","Button","client","axios","create","defaults","baseURL","process","readScore","owner","get","updateScore","score","patch","ScoreBlock","ProfileBlock","reversed","Picture","Nickname","span","Profile","user","picture","Score","useState","setScore","setUser","isCancelled","useRef","useEffect","a","data","current","readScoreFunc","onClick","useCallback","value","newScore","ScoreBoardBlock","Wrapper","ScoreBoard","ScoreBoardContainer","ScoreBoardPage","listHistories","page","perPage","queryString","qs","stringify","HistoryBlock","History","histories","setHistories","hasNextPage","setHasNextPage","loadFunc","concat","pageStart","loadMore","hasMore","loader","key","map","history","_id","style","marginBottom","moment","createdAt","format","HistoryContainer","HistoryPage","App","component","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wbAKA,IAAMA,EAAaC,YAAOC,IAAPD,CAAH,KAgBDE,EATC,kBACd,kBAACH,EAAD,CAAYI,YAAU,EAACC,MAAM,OAC3B,kBAACC,EAAA,EAAD,CAAWC,MAAI,GACb,kBAACL,EAAA,EAAKM,KAAN,CAAWC,GAAIC,IAAMC,GAAG,IAAIC,KAAK,uBACjC,kBAACV,EAAA,EAAKM,KAAN,CAAWC,GAAIC,IAAMC,GAAG,aAAaC,KAAK,gC,mLCbhD,IAAMC,EAAkBZ,IAAOa,IAAV,KAYNC,EAJI,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAaC,EAAhB,mCACjB,kBAACJ,EAAoBI,EAAOD,I,4gBCR9B,IAAME,EAAcC,YAAH,KAmBXC,EAAanB,YAAOS,IAAPT,CAAH,IACZiB,GAGEG,EAAepB,IAAOqB,OAAV,IACdJ,GAMWK,EAHA,SAAC,GAAD,IAAGZ,EAAH,EAAGA,GAAOM,EAAV,6BACbN,EAAK,kBAACS,EAAD,eAAYT,GAAIA,GAAQM,IAAW,kBAACI,EAAiBJ,I,SC9BtDO,E,OAASC,EAAMC,SAErBF,EAAOG,SAASC,QAAUC,4CAEXL,QCJFM,EAAY,SAAAC,GAAK,OAAIP,EAAOQ,IAAP,sBAA0BD,KAE/CE,EAAc,SAAC,GAAD,IAAGF,EAAH,EAAGA,MAAOG,EAAV,EAAUA,MAAV,OACzBV,EAAOW,MAAP,sBAA4BJ,GAAS,CAAEG,W,q0BCAzC,IAAME,EAAanC,IAAOa,IAAV,KAmBVuB,EAAepC,IAAOa,IAAV,KAKd,qBAAGwB,UAEHnB,YADQ,QAMNoB,EAAUtC,IAAOa,IAAV,KAIP0B,EAAWvC,IAAOwC,KAAV,KAORC,EAAU,SAAC,GAAD,IAAGJ,EAAH,EAAGA,SAAH,IAAaK,KAAQ/B,EAArB,EAAqBA,KAAMgC,EAA3B,EAA2BA,QAA3B,OACd,kBAACP,EAAD,CAAcC,SAAUA,GACtB,kBAACC,EAAD,CAASD,SAAUA,EAAUM,QAASA,IACtC,kBAACJ,EAAD,KAAW5B,KA+CAiC,EA3CD,SAAC,GAAiC,IAAD,IAA9BP,gBAA8B,SAAZP,EAAY,EAAZA,MAAY,EACnBe,mBAAS,GADU,mBACtCZ,EADsC,KAC/Ba,EAD+B,OAErBD,mBAAS,IAFY,mBAEtCH,EAFsC,KAEhCK,EAFgC,KAGvCC,EAAcC,kBAAO,GAE3BC,qBAAU,WAWR,OAVmB,uCAAG,8BAAAC,EAAA,sEACGtB,EAAUC,GADb,gBACZsB,EADY,EACZA,KACHJ,EAAYK,UACfN,EAAQK,EAAKV,MACbI,EAASM,EAAKnB,QAJI,2CAAH,oDAQnBqB,GAEO,WACLN,EAAYK,SAAU,KAEvB,CAACvB,IAEJ,IAAMyB,EAAUC,sBAAW,uCACzB,WAAMC,GAAN,eAAAN,EAAA,6DACQO,EAAWzB,EAAQwB,EAD3B,SAEQzB,EAAY,CAAEF,QAAOG,MAAOyB,IAFpC,OAIOV,EAAYK,SACfP,EAASY,GALb,2CADyB,sDASzB,CAAC5B,EAAOG,IAGV,OACE,kBAACE,EAAD,KACE,kBAAC,EAAD,CAASE,SAAUA,EAAUK,KAAMA,IACnC,4BAAKT,GACL,kBAAC,EAAD,CAAQsB,QAAS,kBAAMA,GAAS,KAAhC,KACA,kBAAC,EAAD,CAAQA,QAAS,kBAAMA,EAAQ,KAA/B,O,qcCvFN,IAAMI,EAAkB3D,IAAOa,IAAV,KAUf+C,EAAU5D,YAAOc,EAAPd,CAAH,KAwBE6D,EAZI,kBACjB,kBAACF,EAAD,KACE,kBAACC,EAAD,KACE,kBAAC,EAAD,CAAOvB,UAAU,EAAOP,MAAO,IAC/B,8BACE,iCAEF,kBAAC,EAAD,CAAOO,UAAQ,EAACP,MAAO,OC7BdgC,EAFa,kBAAM,kBAAC,EAAD,OCEnBC,EAFQ,kBAAM,kBAAC,EAAD,O,+DCAhBC,GAAgB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC9BC,EAAcC,KAAGC,UAAU,CAAEJ,OAAMC,YACzC,OAAO3C,EAAOQ,IAAP,yBAA6BoC,K,wMCEtC,IAAMG,GAAetE,YAAOc,EAAPd,CAAH,MAsCHuE,GA7BC,WAAO,IAAD,EACc1B,mBAAS,IADvB,mBACb2B,EADa,KACFC,EADE,OAEkB5B,oBAAS,GAF3B,mBAEb6B,EAFa,KAEAC,EAFA,KAIdC,EAAQ,uCAAG,WAAMX,GAAN,iBAAAd,EAAA,sEACQa,GAAc,CAAEC,SADxB,gBACPb,EADO,EACPA,KACRqB,EAAaD,EAAUK,OAAOzB,EAAKoB,YACnCG,EAAevB,EAAKsB,aAHL,2CAAH,sDAMd,OACE,kBAACJ,GAAD,KACE,kBAAC,KAAD,CACEQ,UAAW,EACXC,SAAUH,EACVI,QAASN,EACTO,OAAQ,wBAAIC,IAAK,GAAT,eAEPV,EAAUW,KAAI,SAAAC,GAAO,OACpB,yBAAKF,IAAKE,EAAQC,IAAKC,MAAO,CAAEC,aAAc,QAC3CC,KAAOJ,EAAQK,WAAWC,OAAO,2BAA4B,IAC7DN,EAAQzE,KAFX,IAEkByE,EAAQ3B,aChCrBkC,GAFU,kBAAM,kBAAC,GAAD,OCEhBC,GAFK,kBAAM,kBAAC,GAAD,OCYXC,I,OARH,kBACV,oCACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,UAAW/B,EAAgBgC,KAAK,IAAIC,OAAK,IAChD,kBAAC,IAAD,CAAOF,UAAWF,GAAaG,KAAK,kBCCpBE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAD,CAAeC,SAAS,wBACtB,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.c2c0f44f.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Container, Menu } from 'semantic-ui-react';\n\nconst StyledMenu = styled(Menu)`\n  && {\n    border: none;\n    box-shadow: none;\n  }\n`;\n\nconst TopMenu = () => (\n  <StyledMenu borderless fixed=\"top\">\n    <Container text>\n      <Menu.Item as={Link} to=\"/\" name=\"점수판\" />\n      <Menu.Item as={Link} to=\"/histories\" name=\"히스토리\" />\n    </Container>\n  </StyledMenu>\n);\n\nexport default TopMenu;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst ResponsiveBlock = styled.div`\n  padding-left: 1rem;\n  padding-right: 1rem;\n  width: 80vw;\n  margin: 0 auto;\n  display: flex;\n`;\n\nconst Responsive = ({ children, ...rest }) => (\n  <ResponsiveBlock {...rest}>{children}</ResponsiveBlock>\n);\n\nexport default Responsive;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst buttonStyle = css`\n  width: 50%;\n  border: none;\n  outline: none;\n  font-size: 10vw;\n  padding: 1.5vw;\n  line-height: 7vw;\n  cursor: pointer;\n\n  background: white;\n  &:hover {\n    background: #f1f1f1;\n  }\n  &:active {\n    background: #cccccc;\n    color: #555555;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  ${buttonStyle}\n`;\n\nconst StyledButton = styled.button`\n  ${buttonStyle}\n`;\n\nconst Button = ({ to, ...rest }) =>\n  to ? <StyledLink to={to} {...rest} /> : <StyledButton {...rest} />;\n\nexport default Button;\n","import axios from 'axios';\n\nconst client = axios.create();\n\nclient.defaults.baseURL = process.env.REACT_APP_API_URL;\n\nexport default client;\n","import client from './client';\n\nexport const readScore = owner => client.get(`/api/scores/${owner}`);\n\nexport const updateScore = ({ owner, score }) =>\n  client.patch(`/api/scores/${owner}`, { score });\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport styled, { css } from 'styled-components';\nimport Button from '../commons/Button';\nimport { readScore, updateScore } from '../../lib/api/scores';\n\nconst ScoreBlock = styled.div`\n  width: 34vw;\n  height: 36vw;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  flex-flow: row wrap;\n\n  h1 {\n    margin: 0;\n    height: 50%;\n    width: 100%;\n    text-align: center;\n    font-size: 18vw;\n    line-height: 19vw;\n  }\n`;\n\nconst ProfileBlock = styled.div`\n  width: 100%;\n  height: 24%;\n  display: flex;\n\n  ${({ reversed }) =>\n    reversed &&\n    css`\n      flex-direction: row-reverse;\n    `}\n`;\n\nconst Picture = styled.div`\n  width: 28%;\n`;\n\nconst Nickname = styled.span`\n  margin: 0 auto;\n  padding: 1vw;\n  font-size: 6vw;\n  line-height: 1em;\n`;\n\nconst Profile = ({ reversed, user: { name, picture } }) => (\n  <ProfileBlock reversed={reversed}>\n    <Picture reversed={reversed} picture={picture} />\n    <Nickname>{name}</Nickname>\n  </ProfileBlock>\n);\n\nconst Score = ({ reversed = false, owner }) => {\n  const [score, setScore] = useState(0);\n  const [user, setUser] = useState({});\n  const isCancelled = useRef(false);\n\n  useEffect(() => {\n    const readScoreFunc = async () => {\n      const { data } = await readScore(owner);\n      if (!isCancelled.current) {\n        setUser(data.user);\n        setScore(data.score);\n      }\n    };\n\n    readScoreFunc();\n\n    return () => {\n      isCancelled.current = true;\n    };\n  }, [owner]);\n\n  const onClick = useCallback(\n    async value => {\n      const newScore = score + value;\n      await updateScore({ owner, score: newScore });\n\n      if (!isCancelled.current) {\n        setScore(newScore);\n      }\n    },\n    [owner, score]\n  );\n\n  return (\n    <ScoreBlock>\n      <Profile reversed={reversed} user={user} />\n      <h1>{score}</h1>\n      <Button onClick={() => onClick(-1)}>-</Button>\n      <Button onClick={() => onClick(1)}>+</Button>\n    </ScoreBlock>\n  );\n};\n\nexport default Score;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Responsive from '../commons/Responsive';\nimport Score from './Score';\n\nconst ScoreBoardBlock = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n\nconst Wrapper = styled(Responsive)`\n  width: 86vw;\n  height: 40vw;\n  padding: 2vw;\n  align-items: center;\n  justify-content: space-between;\n  > span {\n    margin: 0;\n    font-size: 12vw;\n  }\n`;\n\nconst ScoreBoard = () => (\n  <ScoreBoardBlock>\n    <Wrapper>\n      <Score reversed={false} owner={1} />\n      <span>\n        <b>:</b>\n      </span>\n      <Score reversed owner={2} />\n    </Wrapper>\n  </ScoreBoardBlock>\n);\n\nexport default ScoreBoard;\n","import React from 'react';\nimport ScoreBoard from '../components/scoreboard/ScoreBoard';\n\nconst ScoreBoardContainer = () => <ScoreBoard />;\n\nexport default ScoreBoardContainer;\n","import React from 'react';\nimport ScoreBoardContainer from '../containers/ScoreBoardContainer';\n\nconst ScoreBoardPage = () => <ScoreBoardContainer />;\n\nexport default ScoreBoardPage;\n","import qs from 'qs';\nimport client from './client';\n\nexport const listHistories = ({ page, perPage }) => {\n  const queryString = qs.stringify({ page, perPage });\n  return client.get(`/api/histories?${queryString}`);\n};\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport moment from 'moment';\nimport Responsive from '../commons/Responsive';\nimport { listHistories } from '../../lib/api/histories';\n\nconst HistoryBlock = styled(Responsive)`\n  display: flex;\n  width: 100vw;\n  padding: 4rem;\n  align-content: center;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n\nconst History = () => {\n  const [histories, setHistories] = useState([]);\n  const [hasNextPage, setHasNextPage] = useState(true);\n\n  const loadFunc = async page => {\n    const { data } = await listHistories({ page });\n    setHistories(histories.concat(data.histories));\n    setHasNextPage(data.hasNextPage);\n  };\n\n  return (\n    <HistoryBlock>\n      <InfiniteScroll\n        pageStart={0}\n        loadMore={loadFunc}\n        hasMore={hasNextPage}\n        loader={<h4 key={0}>loading...</h4>}\n      >\n        {histories.map(history => (\n          <div key={history._id} style={{ marginBottom: '5vh' }}>\n            {moment(history.createdAt).format('YYYY-MM-DD HH:mm:ss.SSS')}{' '}\n            {history.name} {history.value}\n          </div>\n        ))}\n      </InfiniteScroll>\n    </HistoryBlock>\n  );\n};\n\nexport default History;\n","import React from 'react';\nimport History from '../components/history/History';\n\nconst HistoryContainer = () => <History />;\n\nexport default HistoryContainer;\n","import React from 'react';\nimport HistoryContainer from '../containers/HistoryContainer';\n\nconst HistoryPage = () => <HistoryContainer />;\n\nexport default HistoryPage;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport TopMenu from './components/memu/TopMenu';\nimport ScoreBoardPage from './pages/ScoreBoardPage';\nimport HistoryPage from './pages/HistoryPage';\nimport './App.css';\n\nconst App = () => (\n  <>\n    <TopMenu />\n    <Route component={ScoreBoardPage} path=\"/\" exact />\n    <Route component={HistoryPage} path=\"/histories\" />\n  </>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter basename=\"/rummikub-scoreboard\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}